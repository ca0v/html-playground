{
  "version": 3,
  "sources": ["collage/controls/Listener.ts", "collage/controls/Toaster.ts", "collage/fun/tail.ts", "collage/controls/CommandParser.ts", "collage/controls/Sprite.ts", "collage/controls/CollagePanel.ts", "collage/controls/Animations.ts", "collage/controls/Repl.ts", "collage/fun/getActiveOverlay.ts", "collage/fun/transform.ts", "collage/fun/bbox.ts", "collage/controls/DragAndDrop.ts", "collage/controls/Commands.ts", "collage/commands/Help.ts", "collage/commands/SplitCommand.ts", "collage/commands/AspectRatioCommand.ts", "collage/commands/BorderCommand.ts", "collage/commands/ChangeStyleCommand.ts", "collage/commands/GotoCommandEditorCommand.ts", "collage/commands/getFocusPanels.ts", "collage/commands/SwapPanelsCommand.ts", "collage/commands/GotoCommand.ts", "collage/commands/TextCommand.ts", "collage/commands/PadCommand.ts", "collage/fun/isVisible.ts", "collage/commands/ToggleVisibilityCommand.ts", "collage/commands/TranslateCommand.ts", "collage/commands/MarginCommand.ts", "collage/commands/MergeCommand.ts", "collage/commands/HiResCommand.ts", "collage/commands/MoveCommand.ts", "collage/commands/ChangeRotationCommand.ts", "collage/commands/ChangePositionCommand.ts", "collage/commands/StopCommand.ts", "collage/controls/KeyboardHandlers.ts", "collage/commands/EscapeCommand.ts", "collage/commands/ChangeFontSizeCommand.ts", "collage/controls/GooglePhotoSignin.ts", "collage/controls/GooglePhotos.ts", "collage/controls/CollagePhoto.ts", "collage/controls/GoogleCollagePhoto.ts", "collage/commands/OpenAlbumsCommand.ts", "collage/behavior/MultiSelector.ts", "collage/behavior/NotificationBehavior.ts", "collage/commands/ChangeScaleCommand.ts", "collage/commands/CropToState.ts", "collage/globals.ts", "collage/fun/start.ts", "index.ts"],
  "sourcesContent": ["import { Dictionary } from \"../models/Dictionary\";\r\n/**\r\n * Google speech recognition\r\n */\r\nexport class Listener {\r\n  recognition: SpeechRecognition;\r\n  stopped: boolean = true;\r\n  autostart: boolean = true;\r\n  constructor() {\r\n    this.recognition = new (<any>window)[\"webkitSpeechRecognition\"]();\r\n    let recognition = this.recognition;\r\n    recognition.interimResults = false;\r\n    recognition.continuous = false;\r\n    recognition.lang = \"en-PH\";\r\n    recognition.maxAlternatives = 5;\r\n    recognition.addEventListener(\"start\", e => {\r\n      this.stopped = false;\r\n    });\r\n    recognition.addEventListener(\"end\", e => {\r\n      this.stopped = false;\r\n      if (this.autostart)\r\n        recognition.start();\r\n    });\r\n    recognition.addEventListener(\"result\", e => {\r\n      for (let i = 0; i < e.results.length; i++) {\r\n        let result = e.results[i];\r\n        if (result.isFinal) {\r\n          for (let j = 0; j < result.length; j++) {\r\n            let transcript = result[j].transcript;\r\n            console.log(transcript, result[j]);\r\n            let confidence = result[j].confidence;\r\n            this.trigger(\"speech-detected\", {\r\n              result: transcript,\r\n              power: confidence * 100\r\n            });\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  private _callbacks: Dictionary<Array<(value: {\r\n    result: string;\r\n    power: number;\r\n  }) => void>> = {};\r\n  private callbacks(topic: string) {\r\n    return this._callbacks[topic] = this._callbacks[topic] ?? [];\r\n  }\r\n  on(topic: string, cb: (value: {\r\n    result: string;\r\n    power: number;\r\n  }) => void) {\r\n    this.callbacks(topic).push(cb);\r\n  }\r\n  trigger(topic: string, value: {\r\n    result: string;\r\n    power: number;\r\n  }) {\r\n    this.callbacks(topic).forEach(cb => cb(value));\r\n  }\r\n  listen() {\r\n    if (this.stopped)\r\n      this.recognition.start();\r\n  }\r\n}\r\n", "const messageDuration = 5000;\r\nconst fadeDelay = 1500;\r\n\r\nasync function fadeOut(node: HTMLElement) {\r\n    return new Promise((good, bad) => {\r\n        node.classList.add(\"fade-out\");\r\n        setTimeout(() => good(node), fadeDelay);\r\n    });\r\n}\r\n\r\nexport class Toaster {\r\n    constructor(public target: HTMLElement) { \r\n        Array.from(target.querySelectorAll(\".toast\")).map(t => this.destroyToast(t as HTMLElement));\r\n    }\r\n\r\n    toast(message: string) {\r\n        this.target.classList.remove(\"fade-out\");\r\n        let toast = document.createElement(\"div\");\r\n        toast.classList.add(\"toast\");\r\n        toast.innerText = message;\r\n        this.target.insertBefore(toast, this.target.firstElementChild);\r\n        setTimeout(() => this.destroyToast(toast), messageDuration);\r\n    }\r\n\r\n    async destroyToast(toast: HTMLElement) {\r\n        await fadeOut(toast);\r\n        toast.remove();\r\n        if (!this.target.querySelector(\".toast\")) fadeOut(this.target);\r\n    }\r\n}", "/** Global Functions */\r\nexport function tail(value: string) {\r\n  let list = value.split(\" \");\r\n  list.shift();\r\n  return list.join(\" \");\r\n}\r\n", "/** Global Classes */\r\n/**\r\n * Try to turn a spoken phrase into a command grammar\r\n */\r\nexport class CommandParser {\r\n  parsePhrase(phrase: string) {\r\n    phrase = phrase.toLowerCase();\r\n    let map = <any>{\r\n      \"zoom in\": \"zoom\",\r\n      \"zoom out\": \"zoom\",\r\n      \"drag\": \"pan\",\r\n      \"number for\": \"4\",\r\n      \"number\": \"\",\r\n      \"frame\": \"\",\r\n      \"photo\": \"\",\r\n      \"one\": \"1\",\r\n      \"two\": \"2\",\r\n      \"three\": \"3\",\r\n      \"four\": \"4\",\r\n      \"five\": \"5\",\r\n      \"six\": \"6\",\r\n      \"seven\": \"7\",\r\n      \"eight\": \"8\",\r\n      \"nine\": \"9\",\r\n      \"into\": \"\",\r\n      \"on\": \"\",\r\n      \"and\": \"\",\r\n      \"picture\": \"\",\r\n      \"go to\": \"goto\",\r\n      \"-\": \" \",\r\n    };\r\n    Object.keys(map).forEach(v => phrase = phrase.replace(v, map[v]));\r\n    let tokens = phrase.split(\" \");\r\n    tokens = tokens.map(v => map[v] ?? v).filter(v => !!v);\r\n    return tokens.join(\" \");\r\n  }\r\n}\r\n", "/**\r\n * Manages image style.transform by persisting\r\n * the scale and rotation to facilitate computing transforms\r\n */\r\nexport class Sprite {\r\n  public x: number;\r\n  public y: number;\r\n  public r: number;\r\n  public s: number;\r\n  constructor(public image: HTMLImageElement) {\r\n    this.x = this.y = this.r = 0;\r\n    this.s = 1;\r\n  }\r\n  transform(args: {\r\n    dx?: number;\r\n    dy?: number;\r\n    scale?: number;\r\n    angle?: number;\r\n  }) {\r\n    this.x += (args.dx || 0);\r\n    this.y += (args.dy || 0);\r\n    this.r += (args.angle || 0);\r\n    this.s *= (args.scale || 1.0);\r\n    this.image.style.transform = `translate(${this.x}px,${this.y}px) rotate(${this.r}deg) scale(${this.s})`;\r\n  }\r\n  translate(dx: number, dy: number) {\r\n    return this.transform({ dx, dy });\r\n  }\r\n  rotate(angle: number) {\r\n    return this.transform({ angle });\r\n  }\r\n  scale(scale: number) {\r\n    return this.transform({ scale });\r\n  }\r\n  // modify the pixel density of the image\r\n  // useful when using google photos API to \r\n  // request higher resolution photos\r\n  upscale(scale: number) {\r\n    let style = getComputedStyle(this.image);\r\n    let width = parseFloat(style.width);\r\n    let height = parseFloat(style.height);\r\n    this.scale(1 / scale);\r\n    this.image.style.width = scale * width + \"px\";\r\n    this.image.style.height = scale * height + \"px\";\r\n    this.translate(width / 2 - width * scale / 2, height / 2 - height * scale / 2);\r\n  }\r\n}\r\n", "import { GoogleCollagePhoto } from \"./GoogleCollagePhoto\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { globals } from \"../globals\";\r\n\r\nconst units = \"px em\".split(\" \");\r\n\r\nfunction hasUnits(value: string) {\r\n  return units.some(v => value.endsWith(v));\r\n}\r\n\r\n/**\r\n * Manages a single image on the collage,\r\n * not to be confused with an Photo on the album\r\n */\r\nexport class CollagePanel {\r\n\r\n  /**\r\n   * A panel contains a single photo (this one)\r\n   */\r\n  public photo: GoogleCollagePhoto | null;\r\n\r\n  // the actual image rendered on the panel\r\n  public image: HTMLImageElement;\r\n  public sprite: Sprite;\r\n\r\n  /**\r\n   *\r\n   * @param panel dom element to control\r\n   */\r\n  constructor(public panel: HTMLDivElement) {\r\n    this.photo = null;\r\n    this.image = document.createElement(\"img\");\r\n    this.sprite = new Sprite(this.image);\r\n    this.image.classList.add(\"img\");\r\n    this.image.draggable = false;\r\n    this.panel.appendChild(this.image);\r\n    this.asPanel(this.panel);\r\n  }\r\n\r\n  /**\r\n   * @param photo renders this photo onto the panel\r\n   */\r\n  addPhoto(photo: GoogleCollagePhoto) {\r\n    this.photo = photo;\r\n    this.setBackgroundImage(photo.mediaInfo.baseUrl);\r\n  }\r\n\r\n  /**\r\n   * computes the width of the photo display area\r\n   */\r\n  get photoWidth() {\r\n    return parseInt(window.getComputedStyle(this.image).width);\r\n  }\r\n\r\n  /**\r\n   * computes the height of the photo display area\r\n   */\r\n  get photoHeight() {\r\n    return parseInt(window.getComputedStyle(this.image).height);\r\n  }\r\n\r\n  /**\r\n   * computes the scale of the photo, assumes aspect ratio is preserved (at least the width or height is 'auto')\r\n   */\r\n  get photoScale() {\r\n    let style = window.getComputedStyle(this.image);\r\n    let scale = style.height;\r\n    if (scale === \"auto\") return 1.0;\r\n    return parseFloat(scale) / 100.0;\r\n  }\r\n\r\n  /**\r\n   * return the panel overlay (does not belong here)\r\n   */\r\n  get overlay() {\r\n    return this.panel.querySelector(\".overlay\") as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * Adds text as an input control on the panel\r\n   * Label is absolutely positioned and can move outside the bounds of this panel\r\n   * so probably doesn't belong here\r\n   */\r\n  set text(value: string) {\r\n    let label = document.createElement(\"textarea\");\r\n    label.readOnly = true;\r\n    label.title = \"1\";\r\n    label.style.top = label.style.left = \"0\";\r\n    label.classList.add(\"label\");\r\n    this.panel.appendChild(label);\r\n    label.value = value;\r\n    globals.dnd.moveable(label);\r\n  }\r\n\r\n  /**\r\n   * Remove the panel from the dom\r\n   */\r\n  destroy() {\r\n    this.panel.remove();\r\n  }\r\n\r\n  /**\r\n *\r\n * @param backgroundImage the url of the image to display in this panel\r\n */\r\n  setBackgroundImage(backgroundImage: string): void {\r\n    this.image.src = backgroundImage;\r\n  }\r\n\r\n  /**\r\n   * style the frame\r\n   * @param width border width in \"em\"\r\n   */\r\n  border(width: string, color = \"white\") {\r\n    const units = hasUnits(width) ? \"\" : \"em\";\r\n    this.panel.style.border = `${width}${units} solid ${color}`;\r\n  }\r\n\r\n  /**\r\n  * Rotate the actual frame\r\n  * @param angle angle in degrees\r\n  */\r\n  rotateFrame(angle: string) {\r\n    let node = this.panel;\r\n    if (!node)\r\n      return;\r\n    if (!!angle) {\r\n      this.transform_node(`rotate(${angle}deg)`);\r\n    }\r\n    else {\r\n      let angle = 0;\r\n      let transform = node.style.transform;\r\n      let animations = globals.repl.animations;\r\n      animations.animate(\"rotate\", () => {\r\n        angle += 1;\r\n        node.style.transform = transform + ` rotate(${angle}deg)`;\r\n      });\r\n    }\r\n  }\r\n\r\n  scaleFrame(scale: string) {\r\n    this.transform_node(`scale(${scale}, ${scale})`);\r\n  }\r\n\r\n  private transform_node(v: string) {\r\n    let node = this.panel;\r\n    let transform = (node.style.transform || \"\").split(\" \");\r\n    transform.unshift(v);\r\n    node.style.transform = transform.join(\" \");\r\n  }\r\n  private asPanel(element: HTMLDivElement) {\r\n    element.classList.add(\"panel\");\r\n    element.tabIndex = 1;\r\n    let overlay = document.createElement(\"div\");\r\n    overlay.classList.add(\"overlay\");\r\n    this.panel.appendChild(overlay);\r\n  }\r\n\r\n}\r\n", "/**\r\n * runs an animation on an interval, returns stop()\r\n * Used for panning, zooming, rotating\r\n */\r\nexport class Animations {\r\n  animations: Array<{\r\n    type: string;\r\n    handle: number;\r\n  }> = [];\r\n  \r\n  stop(type: string) {\r\n    let animations = this.animations.map(v => v); //clone\r\n    animations.forEach((v, i) => {\r\n      if (!type || v.type === type) {\r\n        clearInterval(v.handle);\r\n        this.animations.splice(i, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  animate(type: string, cb: () => void) {\r\n    this.animations.push({ type, handle: setInterval(cb, 100) });\r\n  }\r\n}\r\n\r\n", "import { tail } from \"../fun/tail\";\r\nimport { CommandParser } from \"./CommandParser\";\r\nimport { CollagePanel } from \"./CollagePanel\";\r\nimport { GoogleCollagePhoto } from \"./GoogleCollagePhoto\";\r\nimport { Animations } from \"./Animations\";\r\nimport { Commands } from \"./Commands\";\r\nimport { DragAndDrop } from \"./DragAndDrop\";\r\nimport { Behavior } from \"../models/Behavior\";\r\n\r\nexport class Repl {\r\n  // extension point for behaviors\r\n  notify(message: string) {\r\n    console.log(message);\r\n  }\r\n\r\n  // public so split command can operate on them\r\n  public panels: Array<CollagePanel> = [];\r\n  // public so openAlbums command can operation on them\r\n  public photos: Array<GoogleCollagePhoto> = [];\r\n  private commandHistory: Array<string> = [];\r\n  private commandHistoryIndex = -1;\r\n  public dnd: DragAndDrop | null = null;\r\n  public animations = new Animations();\r\n\r\n  constructor(public commands: Commands) {\r\n    // cannot set dnd because dnd needs repl (for now)\r\n  }\r\n\r\n  public use(behavior: Behavior<Repl>) {\r\n    behavior.extend(this);\r\n  }\r\n\r\n  async eval(command: string) {\r\n    console.log(`executing: ${command}`);\r\n    let [verb] = command.split(\" \");\r\n    let handler = this.commands.get(verb);\r\n    if (handler) {\r\n      await handler.execute(this, tail(command));\r\n      return;\r\n    }\r\n    switch (verb) {\r\n      case \"export\":\r\n        let canvas = await this.asCanvas();\r\n        if (!canvas) return;\r\n\r\n        let img = document.createElement(\"img\");\r\n        img.classList.add(\"export-result\");\r\n        img.src = canvas.toDataURL();\r\n        document.body.insertBefore(img, document.body.firstElementChild);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // create a canvas of the entire collage\r\n  async asCanvas() {\r\n    return new Promise<HTMLCanvasElement>((good, bad) => {\r\n      let imageCanvas = document.querySelector(\".canvas\")?.getBoundingClientRect();\r\n      if (!imageCanvas) return;\r\n\r\n      let canvas = document.createElement(\"canvas\");\r\n      canvas.width = imageCanvas.width;\r\n      canvas.height = imageCanvas.height;\r\n\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (!ctx) return;\r\n\r\n      let count = 0;\r\n      let panels = this.panels.filter((p) => 0 === getComputedStyle(p.panel).backgroundImage.indexOf(`url(\"`));\r\n      console.log(\"loading\", panels.length);\r\n      panels.forEach((p) => {\r\n        let pos = p.panel.getBoundingClientRect();\r\n        let img = document.createElement(\"img\");\r\n        img.crossOrigin = \"anonymous\";\r\n        img.width = pos.width;\r\n        img.height = pos.height;\r\n        img.style.transform = p.panel.style.transform;\r\n        img.onload = () => {\r\n          ctx.drawImage(img, pos.x, pos.y);\r\n          count++;\r\n          console.log(\"loaded:\", count);\r\n          if (count === panels.length) {\r\n            good(canvas);\r\n          }\r\n        };\r\n        // strip url(\"\");\r\n        let url = getComputedStyle(p.panel).backgroundImage;\r\n        console.log(\"url\", url);\r\n        url = url.substring(5, url.length - 2);\r\n        console.log(\"url\", url);\r\n        img.src = url;\r\n      });\r\n    });\r\n  }\r\n\r\n  getCollageOverlays() {\r\n    return Array.from(document.querySelectorAll(`.panel[data-id] .overlay`)) as HTMLElement[];\r\n  }\r\n\r\n  getPhotoOverlays() {\r\n    return Array.from(document.querySelectorAll(`.photos .img .overlay[data-id]`)) as HTMLElement[];\r\n  }\r\n\r\n  select(id: string) {\r\n    return this.selectPanel(id)?.panel;\r\n  }\r\n\r\n  selectPanel(id: string) {\r\n    return this.panels.find((p) => p.overlay.dataset.id === id);\r\n  }\r\n\r\n  selectPhoto(id: string) {\r\n    return this.photos[parseInt(id) - 1];\r\n  }\r\n\r\n  removePanel(panel: CollagePanel) {\r\n    let index = this.panels.indexOf(panel);\r\n    if (-1 === index) throw \"panel not found\";\r\n    this.panels.splice(index, 1);\r\n    panel.panel.remove();\r\n  }\r\n\r\n  reindex() {\r\n    this.panels\r\n      .filter((p) => !!p?.panel?.parentElement)\r\n      .forEach((p, i) => (p.overlay.dataset.id = p.overlay.innerText = i + 1 + \"\"));\r\n  }\r\n\r\n  /**\r\n   * Adds zoom and drag capabilities to a panel\r\n   * @param panel make this panel interactive\r\n   */\r\n  addBehaviors(panel: CollagePanel) {\r\n    let overlay = panel.overlay;\r\n    let dnd = this.dnd;\r\n    if (dnd) {\r\n      dnd.zoomable(overlay);\r\n      dnd.draggable(overlay);\r\n      dnd.panable(panel);\r\n      dnd.droppable(overlay);\r\n    }\r\n  }\r\n\r\n  reindexPhotos() {\r\n    this.photos.forEach((photo, i) => {\r\n      let p = photo.img;\r\n      let overlay = p.querySelector(\".overlay\") as HTMLElement;\r\n      if (!overlay) {\r\n        overlay = document.createElement(\"div\");\r\n        overlay.classList.add(\"overlay\");\r\n        overlay.dataset.id = overlay.innerText = 1 + i + \"\";\r\n        p.appendChild(overlay);\r\n        this.dnd?.draggable(overlay);\r\n      }\r\n    });\r\n  }\r\n\r\n  priorCommand() {\r\n    if (this.commandHistoryIndex > 0) {\r\n      return this.commandHistory[--this.commandHistoryIndex];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  nextCommand() {\r\n    if (this.commandHistoryIndex < this.commandHistory.length - 1) {\r\n      return this.commandHistory[++this.commandHistoryIndex];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  async startup() {\r\n    let childPanels = Array.from(document.querySelectorAll(\".panel\")).map((p) => new CollagePanel(<HTMLDivElement>p));\r\n    childPanels.forEach((c) => this.addBehaviors(c));\r\n    this.panels.push(...childPanels);\r\n    let cmd = document.querySelector(\".console\") as HTMLInputElement;\r\n    cmd.onkeydown = (event) => {\r\n      switch (event.key) {\r\n        case \"Enter\":\r\n          this.executeCommand(cmd.value);\r\n          cmd.value = \"\";\r\n          break;\r\n        case \"ArrowUp\":\r\n          cmd.value = this.priorCommand();\r\n          break;\r\n        case \"ArrowDown\":\r\n          cmd.value = this.nextCommand();\r\n          break;\r\n      }\r\n    };\r\n    this.reindex();\r\n  }\r\n\r\n  public executeCommand(cmd: string) {\r\n    this.commandHistoryIndex = this.commandHistory.push(cmd);\r\n    try {\r\n      this.eval(cmd);\r\n    } catch (ex) {\r\n      this.notify(ex);\r\n    }\r\n  }\r\n\r\n  public parseCommand(command: string) {\r\n    let ai = new CommandParser();\r\n    return ai.parsePhrase(command);\r\n  }\r\n}\r\n", "export function getActiveOverlay() {\r\n  let activePanel = document.activeElement;\r\n  if (!activePanel) {\r\n    console.log(\"no active panel\");\r\n    return;\r\n  }\r\n  return activePanel.querySelector(\".overlay\") as HTMLElement;\r\n}\r\n", "\r\nexport function transform(node: HTMLElement, value: string) {\r\n  let t = window.getComputedStyle(node).transform;\r\n  t = (t === \"none\") ? \"\" : t + \" \";\r\n  node.style.transform = t + value;\r\n}\r\n\r\n", "export function bbox(node: HTMLElement) {\r\n    let { left, top, width, height } = getComputedStyle(node);\r\n    return { top: parseFloat(top), left: parseFloat(left), width: parseFloat(width), height: parseFloat(height) };\r\n}\r\n", "import { getActiveOverlay } from \"../fun/getActiveOverlay\";\r\nimport { CollagePanel } from \"./CollagePanel\";\r\nimport { Repl } from \"./Repl\";\r\nimport { KeyboardHandlers } from \"./KeyboardHandlers\";\r\nimport { transform } from \"../fun/transform\";\r\nimport { bbox } from \"../fun/bbox\";\r\n\r\n/**\r\n * manages user interactions for keyboard shortcuts, wheel, drag, click events\r\n */\r\nexport class DragAndDrop {\r\n  private source: HTMLElement | null = null;\r\n\r\n  constructor(public repl: Repl, public keydownHandlers: KeyboardHandlers) {\r\n\r\n    window.addEventListener(\"wheel\", (event) => {\r\n      let source = getActiveOverlay();\r\n      if (!source) {\r\n        console.log(\"no active overlay found\");\r\n        return;\r\n      }\r\n      // TODO would be nice to only perform when mouse is over the element\r\n      // document.elementsFromPoint(event.screenX, event.screenY);\r\n      let from = source.innerHTML;\r\n      // -150 => 0.9, 150 => 1.1, so\r\n      let delta = 1 + event.deltaY / 1500;\r\n      repl.executeCommand(`zoom ${from} ${delta}`);\r\n    });\r\n\r\n    window.addEventListener(\"keydown\", event => {\r\n\r\n      if (this.keydownHandlers.getEventHandlers(event).some(handler => {\r\n        return false !== handler.command.execute(repl);\r\n      })) {\r\n        // handled\r\n        event.preventDefault();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Move the background image on the panel\r\n   * @param panel Invoke pan on the panel so that it follows the mouse\r\n   */\r\n  panable(panel: CollagePanel) {\r\n    let draggable = panel.image;\r\n    let startPosition = [0, 0];\r\n    draggable.classList.add(\"draggable\");\r\n\r\n    draggable.addEventListener(\"pointerdown\", event => {\r\n      let left = parseFloat(draggable.style.left || \"0\");\r\n      let top = parseFloat(draggable.style.top || \"0\");\r\n      startPosition = [left - event.screenX, top - event.screenY];\r\n      draggable.setPointerCapture(event.pointerId);\r\n      draggable.addEventListener(\"pointermove\", pointermove);\r\n      event.stopPropagation();\r\n    });\r\n\r\n    draggable.addEventListener(\"pointerup\", event => {\r\n      draggable.releasePointerCapture(event.pointerId);\r\n      draggable.removeEventListener(\"pointermove\", pointermove);\r\n      let box = bbox(draggable);\r\n      let rect = draggable.getBoundingClientRect();      \r\n      let scale = rect.width / box.width;\r\n      draggable.style.top = draggable.style.left = \"0px\";\r\n      transform(draggable, `translate(${box.left / scale}px, ${box.top / scale}px)`);\r\n      event.stopPropagation();\r\n    });\r\n\r\n    let pointermove = (event: MouseEvent) => {\r\n      let [x, y] = [startPosition[0] + event.screenX, startPosition[1] + event.screenY];\r\n      draggable.style.left = `${x}px`;\r\n      draggable.style.top = `${y}px`;\r\n      event.stopPropagation();\r\n    };\r\n  }\r\n\r\n  moveable(draggable: HTMLElement) {\r\n    let startPosition = [0, 0];\r\n    draggable.classList.add(\"draggable\");\r\n\r\n    draggable.addEventListener(\"pointerdown\", event => {\r\n      let top = parseFloat(draggable.style.top);\r\n      let left = parseFloat(draggable.style.left);\r\n      startPosition = [left - event.screenX, top - event.screenY];\r\n      draggable.setPointerCapture(event.pointerId);\r\n      draggable.addEventListener(\"pointermove\", pointermove);\r\n      event.stopPropagation();\r\n    });\r\n\r\n    draggable.addEventListener(\"pointerup\", event => {\r\n      draggable.releasePointerCapture(event.pointerId);\r\n      draggable.removeEventListener(\"pointermove\", pointermove);\r\n      event.stopPropagation();\r\n    });\r\n\r\n    let pointermove = (event: MouseEvent) => {\r\n      let [left, top] = [startPosition[0] + event.screenX, startPosition[1] + event.screenY];\r\n      draggable.style.top = top + \"px\";\r\n      draggable.style.left = left + \"px\";\r\n      event.stopPropagation();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Make an element a drag source\r\n   * @param div element to make draggable\r\n   */\r\n  draggable(draggable: HTMLElement) {\r\n    draggable.classList.add(\"draggable\");\r\n    draggable.draggable = true;\r\n    draggable.addEventListener(\"dragstart\", event => this.ondragstart(draggable));\r\n  }\r\n\r\n  /**\r\n   * Make an element a drop target\r\n   * @param target element to make into a drop target (draggable are droppable, bad name)\r\n   */\r\n  droppable(target: HTMLElement) {\r\n    target.addEventListener(\"dragover\", (event) => {\r\n      if (!this.source)\r\n        return;\r\n      event.preventDefault();\r\n      this.ondragover(target, this.source);\r\n    });\r\n    target.addEventListener(\"drop\", (event) => {\r\n      if (!this.source)\r\n        return;\r\n      event.preventDefault();\r\n      this.ondrop(target, this.source);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param source listen for wheel events\r\n   */\r\n  zoomable(source: HTMLElement) {\r\n  }\r\n  ondragstart(source: HTMLElement) {\r\n    this.source = source;\r\n  }\r\n\r\n  ondragover(target: HTMLElement, source: HTMLElement) {\r\n    // nothing to do?\r\n  }\r\n\r\n  ondrop(target: HTMLElement, source: HTMLElement) {\r\n    let from = source.innerHTML;\r\n    let to = target.innerHTML;\r\n    let command = `move ${from} ${to}`;\r\n    this.repl.executeCommand(command);\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Dictionary } from \"../models/Dictionary\";\r\n\r\n/**\r\n * Keeps hash of commands\r\n */\r\nexport class Commands {\r\n    nameOf(command: Command) {\r\n      const keys = Object.keys(this.commands);\r\n      const i = keys.findIndex(k => this.commands[k].execute === command.execute);\r\n      return -1<i ? keys[i]:null;\r\n    }\r\n\r\n    private commands: Dictionary<Command> = {};\r\n\r\n    /**\r\n     * Finds the command associated with the action keyword\r\n     * @param verb the full name of the action keyword or a partial match\r\n     */\r\n    get(verb: string) {\r\n        if (this.commands[verb]) return this.commands[verb];\r\n        var key = Object.keys(this.commands).find(v => v.startsWith(verb));\r\n        return key && this.commands[key];\r\n    }\r\n\r\n    /**\r\n     * Adds/replaces command associated with an action keyword\r\n     * @param command command to process the action\r\n     * @param verb action to associate with a command\r\n     */\r\n    add(command: Command, verb: string) {\r\n        this.commands[verb] = command;\r\n    }\r\n\r\n    list() {\r\n      return Object.keys(this.commands);\r\n    }\r\n\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nimport { globals } from \"../globals\";\r\n\r\nconst textarea = document.createElement(\"textarea\");\r\nfunction escape(value: string) {\r\n  textarea.innerText = value;\r\n  return textarea.value;\r\n}\r\n\r\nexport class HelpCommand implements Command {\r\n  private initialized = false;\r\n\r\n  execute(repl: Repl, args: string) {\r\n    const target = document.querySelector(\".help\") as HTMLSelectElement;\r\n    if (!target) throw \"cannot show help unless a HTMLSelectElement is defined with a className of 'help'\";\r\n\r\n    if (!this.initialized) {\r\n      const commands = globals.repl.commands.list().map(name => ({ command: (globals.repl.commands.get(name) as Command), name }));\r\n      const keyboardCommands = globals.keyboardHandlers.list();\r\n      const markup1 = commands.map(c => `<option value=\"${c.name}\">\"${c.name}\" - ${c.command.about ? c.command.about() : \"command\"}</option>`).sort().join(\"\");\r\n      const markup2 = keyboardCommands.map((c, i) => `<option value=\"${c.key}\">\"${c.key}\" - ${(c.about!)}</code></option>`).sort().join(\"\");\r\n\r\n\r\n      target.innerHTML = `${markup1}${markup2}`;\r\n      target.addEventListener(\"change\", () => {\r\n        document.querySelector<HTMLTextAreaElement>(\".console\")!.value = target.value;\r\n      });\r\n    }\r\n    target.toggleAttribute(\"hidden\");\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { CollagePanel } from \"../controls/CollagePanel\";\r\n\r\n/**\r\n   * Splits the current panel into 4 equal size panels\r\n   * This panel then takes on the role of a panel container\r\n   */\r\n  function split(panel: CollagePanel) {\r\n    let [topleft, topright, bottomleft, bottomright] = [1, 2, 3, 4].map(n => document.createElement(\"div\"));\r\n    let children = [topleft, topright, bottomleft, bottomright].map(v => new CollagePanel(v));\r\n    topleft.classList.add(\"q1\");\r\n    topright.classList.add(\"q2\");\r\n    bottomleft.classList.add(\"q3\");\r\n    bottomright.classList.add(\"q4\");\r\n    // photo contains no state so not cloning\r\n    const photo = panel.photo;\r\n    if (photo) {\r\n      children.forEach(c => c.addPhoto(photo.clone()));\r\n    }\r\n    panel.panel.classList.remove(\"panel\");\r\n    panel.overlay.remove();\r\n    panel.image.src = \"\";\r\n    panel.panel.classList.add(\"panel-container\");\r\n    panel.panel.dataset[\"id\"] = \"\";\r\n    children.forEach(c => panel.panel.appendChild(c.panel));\r\n    return children;\r\n  }\r\n\r\n/**\r\n * Splits the panel into 4 new child panels\r\n */\r\nexport class SplitCommand implements Command {\r\n\r\n  execute(repl: Repl, commandArgs: string): void {\r\n    let id = commandArgs;\r\n\r\n    let node = repl.select(id);\r\n    if (!node) {\r\n      console.log(\"no node found\");\r\n      return;\r\n    }\r\n\r\n    let panel = repl.panels.find(p => p.panel === node);\r\n    if (!panel) {\r\n      console.log(\"no panel found\");\r\n      return;\r\n    }\r\n\r\n    let originalIndex = repl.panels.indexOf(panel);\r\n    let childPanels = split(panel);\r\n    // remove since it is no longer a panel\r\n    repl.panels.splice(originalIndex, 1, ...childPanels);\r\n    childPanels.forEach(c => repl.addBehaviors(c));\r\n    repl.reindex();\r\n  }\r\n\r\n}\r\n\r\n\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nexport class AspectRatioCommand implements Command {\r\n  about() {\r\n    return `set the aspect ratio to W H`;\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void {\r\n    let [w, h] = args.split(\" \");\r\n    let width = parseFloat(w);\r\n    let height = parseFloat(h);\r\n    let window = document.querySelector(\".window\") as HTMLElement;\r\n    let canvas = window.parentElement as HTMLElement;\r\n    let currentWidth = parseFloat(getComputedStyle(canvas).width);\r\n    let currentHeight = parseFloat(getComputedStyle(canvas).height);\r\n    // multiple width and height by maximum scale such that\r\n    // width * scale <= currentWidth and height * scale <= currentHeight\r\n    let sx = currentWidth / width;\r\n    let sy = currentHeight / height;\r\n    let scale = Math.min(sx, sy);\r\n    window.style.width = `${Math.round(width * scale)}px`;\r\n    window.style.height = `${Math.round(height * scale)}px`;\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nexport class BorderCommand implements Command {\r\n  about() {\r\n    return \"set the border WIDTH COLOR of ID1 ID2 ...\";\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void {\r\n    const [width, color, ...ids] = args.split(\" \").filter((v) => !!v);\r\n    if (!width) throw \"width required\";\r\n    if (!color) throw \"color required\";\r\n    const targets = ids.length ? ids.map((id) => repl.selectPanel(id)) : repl.panels;\r\n    targets.forEach((p) => p?.border(width, color));\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nconst units = \"px em\".split(\" \");\r\n\r\nfunction hasUnits(value: string) {\r\n  return units.some(v => value.endsWith(v));\r\n}\r\n\r\nexport class ChangeStyleCommand implements Command {\r\n  constructor(\r\n    public target: keyof Omit<CSSStyleDeclaration, number>,\r\n    public options?: {\r\n      units?: string;\r\n      delta?: number;\r\n    }\r\n  ) { }\r\n\r\n  about() {\r\n    return `change ${this.target}`;\r\n  }\r\n\r\n  private keyboardHandler(repl: Repl) {\r\n    return repl.panels\r\n      .filter(p => p.panel.classList.contains(\"focus\"))\r\n      .some(panel => {\r\n        const target = panel.panel;\r\n        const style = getComputedStyle(target);\r\n        const value = parseFloat(style[<any>this.target]) + (this.options?.delta ?? 0);\r\n        target.style[<any>this.target] = value + (this.options?.units ?? \"\");\r\n        return true;\r\n      });\r\n  }\r\n\r\n  execute(repl: Repl, args?: string | undefined): void | false {\r\n    if (!args) {\r\n      if (this.keyboardHandler(repl)) return;\r\n      return false;\r\n    }\r\n\r\n    const panels = repl.panels;\r\n    const [value, ...ids] = args.split(\" \");\r\n    if (!value) throw \"size required\";\r\n\r\n    const targets = (!ids.length) ? panels : ids.map(id => repl.selectPanel(id)).filter(v => !!v);\r\n    if (!targets.length) return false;\r\n\r\n    const units = !hasUnits(value) ? this.options?.units || \"\" : \"\";\r\n\r\n    targets.forEach(panel => {\r\n      if (!panel) return;\r\n      panel.panel.style[<any>this.target] = `${value}${units}`;\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nfunction hasFocus(node: HTMLElement) {\r\n  return document.activeElement === node;\r\n}\r\n\r\nexport class GotoCommandEditorCommand implements Command {\r\n  execute(repl: Repl, args: string): void | false {\r\n    let editor = document.querySelector(\".console\") as HTMLInputElement;\r\n    if (!editor) {\r\n      repl.notify(\"no command editor found\");\r\n      return false;\r\n    }\r\n    if (hasFocus(editor)) return false;\r\n    editor.focus();\r\n    editor.select();\r\n  }\r\n}\r\n", "import { Repl } from \"../controls/Repl\";\r\n\r\nexport function getFocusPanels(repl: Repl) {\r\n  return repl.panels.filter(p => p.panel.classList.contains(\"focus\"));\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { CollagePanel } from \"../controls/CollagePanel\";\r\nimport { getFocusPanels } from \"./getFocusPanels\";\r\n\r\n/**\r\n * swap images of two panels\r\n */\r\nfunction swapImages(panel1: CollagePanel, panel2: CollagePanel) {\r\n  let image1 = panel1.image;\r\n  let image2 = panel2.image;\r\n  let parent1 = image1.parentElement;\r\n  let parent2 = image2.parentElement;\r\n  if (!parent1 || !parent2) return false;\r\n  let next1 = image1.nextElementSibling;\r\n  let next2 = image2.nextElementSibling;\r\n  image1.remove();\r\n  image2.remove();\r\n  parent2.insertBefore(image1, next2);\r\n  parent1.insertBefore(image2, next1);\r\n  let photo1 = panel1.photo;\r\n  let photo2 = panel2.photo;\r\n  panel1.image = image2;\r\n  panel2.image = image1;\r\n  panel1.photo = photo2;\r\n  panel2.photo = photo1;\r\n}\r\n\r\n\r\nexport class SwapPanelsCommand implements Command {\r\n  private keyboardHandler(repl: Repl) {\r\n    let panels = getFocusPanels(repl);\r\n    if (!panels.length) return;\r\n    if (2 !== panels.length) {\r\n      repl.notify(\"Exactly two panels must be selected before you can perform a swap.\");\r\n      return false;\r\n    }\r\n    swapImages(panels[0], panels[1]);\r\n  }\r\n\r\n  about() {\r\n    return \"Swap Panel A B\";\r\n  }\r\n\r\n  execute(repl: Repl, args?: string | undefined): false | void | Promise<false | void> {\r\n    if (!args)\r\n      return this.keyboardHandler(repl);\r\n\r\n    let [id1, id2] = args.split(\" \");\r\n    let panel1 = repl.selectPanel(id1);\r\n    let panel2 = repl.selectPanel(id2);\r\n    if (!panel1) {\r\n      repl.notify(`Panel not found: ${id1}`);\r\n      return false;\r\n    }\r\n    if (!panel2) {\r\n      repl.notify(`Panel not found: ${id2}`);\r\n      return false;\r\n    }\r\n    swapImages(panel1, panel2);\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nexport class GotoCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let id = args;\r\n    let node = repl.select(id);\r\n    if (!node) return;\r\n    node.focus();\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nexport class TextCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let [id, value] = args.split(\" \");\r\n    let panel = repl.selectPanel(id);\r\n    if (!panel) return;\r\n    panel.text = value;\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nexport class PadCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let [id, width] = args.split(\" \");\r\n    let node = repl.select(id);\r\n    if (!node) return;\r\n    node.style.padding = `${width}em`;\r\n\r\n  }\r\n}\r\n", "export function isVisible(node: HTMLElement) {\r\n  return node.style.visibility !== \"hidden\";\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { isVisible } from \"../fun/isVisible\";\r\nexport class ToggleVisibilityCommand implements Command {\r\n  constructor(public options: {\r\n    selector: string;\r\n  }) {\r\n  }\r\n  execute(repl: Repl, args: string): void {\r\n    let overlays = Array.from(document.querySelectorAll(this.options.selector)) as Array<HTMLElement>;\r\n    let allVisible = overlays.every(v => isVisible(v));\r\n    if (!allVisible) {\r\n      overlays.forEach(v => v.style.visibility = \"visible\");\r\n    }\r\n    else {\r\n      overlays.forEach(v => v.style.visibility = \"hidden\");\r\n    }\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { getFocusPanels } from \"./getFocusPanels\";\r\nimport { transform } from \"../fun/transform\";\r\n\r\n/**\r\n   * Move the image inside the frame\r\n   * @param x horizontal offset in pixels\r\n   * @param y vertical offset in pixels\r\n   */\r\nfunction pan(repl: Repl, node: HTMLElement, x: string, y: string) {\r\n  let [dx, dy] = [0, 0];\r\n  let animate = true;\r\n  let pixelSize = 1;\r\n  switch (x) {\r\n    case \"up\":\r\n      dy = -pixelSize;\r\n      break;\r\n    case \"down\":\r\n      dy = pixelSize;\r\n      break;\r\n    case \"left\":\r\n      dx = -pixelSize;\r\n      break;\r\n    case \"right\":\r\n      dx = pixelSize;\r\n      break;\r\n    default:\r\n      animate = false;\r\n      dx = pixelSize * parseFloat(x);\r\n      dy = pixelSize * parseFloat(y);\r\n      break;\r\n  }\r\n  let op = () => {\r\n    transform(node, `translate(${dx}px, ${dy}px)`);\r\n  };\r\n  op();\r\n  let animations = repl.animations;\r\n  animate && animations.animate(\"pan\", op);\r\n}\r\n\r\nexport class TranslateImageCommand implements Command {\r\n\r\n  constructor(public delta?: {\r\n    x?: number;\r\n    y?: number;\r\n  }) { }\r\n\r\n  about(){\r\n    let result = <string[]>[];\r\n    let x = this.delta?.x || 0;\r\n    let y = this.delta?.y || 0;\r\n\r\n    if (x > 0) result.push(`${x} px right`);\r\n    if (x < 0) result.push(`${-x} px left`);\r\n    if (y > 0) result.push(`${y} px up`);\r\n    if (y < 0) result.push(`${-y} px down`);\r\n    return `move image ${result.join(\" and \")}`;\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void | false {\r\n    if (!!args) {\r\n      let [id, x, y] = args.split(\" \");\r\n      let panel = repl.selectPanel(id);\r\n      if (!panel) return false;\r\n      pan(repl, panel.image, x, y || \"0\");\r\n    } else if (this.delta) {\r\n      let panels = getFocusPanels(repl);\r\n      if (!panels.length) return false;\r\n\r\n      panels.forEach(panel => {\r\n        pan(repl, panel.image, (this.delta!.x || 0) + \"\", (this.delta!.y || 0) + \"\");\r\n      });\r\n    } else {\r\n      // not handled\r\n      return false;\r\n    }\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nexport class MarginCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let [id, width] = args.split(\" \");\r\n    let node = repl.select(id);\r\n    if (!node) return;\r\n\r\n    node.style.margin = `${width}em`;\r\n    }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { CollagePanel } from \"../controls/CollagePanel\";\r\n\r\nfunction merge_nodes(repl: Repl, panel1: CollagePanel, panel2: CollagePanel) {\r\n  let node1 = panel1.panel;\r\n  let node2 = panel2.panel;\r\n\r\n  node2.classList.forEach(c => node1.classList.add(c));\r\n  repl.removePanel(panel2);\r\n\r\n  // if node1 is q1...q4 and only child then it assumes the q of it's container and replaces its container\r\n  let qs = [1, 2, 3, 4].map(v => `q${v}`);\r\n  if (qs.every(v => node1.classList.contains(v))) {\r\n    const parent = node1.parentElement;\r\n    if (!parent) return;\r\n\r\n    if (parent.classList.contains(\"panel-container\")) {\r\n      qs.forEach(v => node1.classList.remove(v));\r\n      qs.forEach(v => parent.classList.contains(v) && node1.classList.add(v));\r\n      parent.parentElement?.insertBefore(node1, parent);\r\n      parent.remove();\r\n    }\r\n  }\r\n  repl.reindex();\r\n}\r\n\r\nexport class MergeCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let [id1, id2] = args.split(\" \");\r\n    let node1 = repl.selectPanel(id1);\r\n    let node2 = repl.selectPanel(id2);\r\n    node1 && node2 && merge_nodes(repl, node1, node2);\r\n  }\r\n  \r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { CollagePanel } from \"../controls/CollagePanel\";\r\nimport { bbox } from \"../fun/bbox\";\r\n\r\nexport class HiResCommand implements Command {\r\n\r\n  /**\r\n   * replaces the current photo with one of higher quality\r\n   */\r\n  async upgradeResolution(repl: Repl, panel: CollagePanel) {\r\n    if (!panel.photo)\r\n      return;\r\n\r\n    // attempts to increase an image size and decrease the transform scale\r\n    // to have a negligable effect on the image but allow for swapping in\r\n    // a higher resolution version.\r\n    // this is not compensating for  padding, margin, border width, etc.\r\n    // it is not preserving rotation\r\n    let box = bbox(panel.image);\r\n    let imageRect = panel.image.getBoundingClientRect();\r\n    let scale = imageRect.width / box.width;\r\n    if (1 > scale) {\r\n      repl.notify(\"this would not be an upgrade\");\r\n      return;\r\n    }\r\n    let panelRect = panel.panel.getBoundingClientRect();\r\n    panel.image.style.width = imageRect.width + \"px\";\r\n    panel.image.style.height = imageRect.height + \"px\";\r\n    let dx = imageRect.left - panelRect.left - parseFloat(panel.panel.style.borderLeftWidth);\r\n    let dy = imageRect.top - panelRect.top - parseFloat(panel.panel.style.borderTopWidth);\r\n    panel.image.style.transform = `translate(${dx}px,${dy}px)`;\r\n    panel.setBackgroundImage(`${panel.photo.mediaInfo.baseUrl}=w${Math.floor(imageRect.width)}`);\r\n    repl.notify(`upgraded by ${Math.round(scale * 100)}%`);\r\n  }\r\n\r\n\r\n  execute(repl: Repl, args: string): void {\r\n    const [...ids] = args.split(\" \").map(v => v.trim()).filter(v => v.length);\r\n    const targets = !ids.length ? repl.panels : ids.map(id => repl.selectPanel(id));\r\n    targets.forEach(p => p && this.upgradeResolution(repl, p));\r\n\r\n  }\r\n}\r\n\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nexport class MoveCommand implements Command {\r\n  execute(repl: Repl, args: string): void {\r\n    let [id1, id2] = args.split(\" \");\r\n    let photo = repl.selectPhoto(id1);\r\n    if (!photo) return;\r\n\r\n\r\n    let panel = repl.selectPanel(id2);\r\n    if (!panel) return;\r\n\r\n    panel.addPhoto(photo);\r\n\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { getFocusPanels } from \"./getFocusPanels\";\r\nimport { transform } from \"../fun/transform\";\r\n\r\nfunction rotateImage(repl: Repl, node: HTMLElement, angle: string) {\r\n  if (!node)\r\n    return;\r\n\r\n  if (!!angle) {\r\n    transform(node, `rotate(${angle}deg)`);\r\n  }\r\n  else {\r\n    let angle = 0;\r\n    let animations = repl.animations;\r\n    animations.animate(\"rotate\", () => {\r\n      angle += 1;\r\n      transform(node, `rotate(${angle}deg)`);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class RotatePanelCommand implements Command {\r\n  constructor(public delta: number) { }\r\n\r\n  about() {\r\n    return `rotate panel by ${this.delta} deg`;\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void | false {\r\n    let panels = getFocusPanels(repl);\r\n    if (!panels.length) return false;\r\n\r\n    panels.forEach(panel => {\r\n      let labelImageOrPanel = panel.panel;\r\n      transform(labelImageOrPanel, `rotate(${this.delta}deg)`);\r\n    });\r\n  }\r\n}\r\n\r\nexport class RotateImageCommand implements Command {\r\n  constructor(public delta?: number) { }\r\n\r\n  about() {\r\n    return `rotate image by ${this.delta} deg`;\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void | false {\r\n    if (!!args) {\r\n      let [noun, noun2] = args.split(\" \");\r\n      let panel = repl.selectPanel(noun);\r\n      if (!panel) return false;\r\n      rotateImage(repl, panel.image, noun2);\r\n      return;\r\n    }\r\n\r\n    let panels = getFocusPanels(repl);\r\n    if (!panels.length) return false;\r\n\r\n    panels.forEach(panel => {\r\n      let labelImageOrPanel = panel.image;\r\n      transform(labelImageOrPanel, `rotate(${this.delta}deg)`);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { getFocusPanels } from \"./getFocusPanels\";\r\n\r\nexport class TranslatePanelCommand implements Command {\r\n  constructor(public delta: {\r\n    x?: number;\r\n    y?: number;\r\n  }) { }\r\n\r\n  about(){\r\n    let result = <string[]>[];\r\n    let x = this.delta.x || 0;\r\n    let y = this.delta.y || 0;\r\n\r\n    if (x > 0) result.push(`${x} px right`);\r\n    if (x < 0) result.push(`${-x} px left`);\r\n    if (y > 0) result.push(`${y} px up`);\r\n    if (y < 0) result.push(`${-y} px down`);\r\n    return `move panel ${result.join(\" and \")}`;\r\n  }\r\n\r\n  execute(repl: Repl, args: string): void | false {\r\n    let panels = getFocusPanels(repl);\r\n    if (!panels.length) return false;\r\n    panels.forEach(panel => {\r\n      let labelImageOrPanel = panel.panel;\r\n      let computedTranform = getComputedStyle(labelImageOrPanel).transform;\r\n      if (computedTranform === \"none\") computedTranform = \"\";\r\n      labelImageOrPanel.style.transform = computedTranform + ` translate(${this.delta.x || 0}px, ${this.delta.y || 0}px)`;\r\n    });\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\n\r\nexport class StopCommand implements Command {\r\n  about() { return \"Stop Animations\";}\r\n\r\n  execute(repl: Repl, args: string): void | false {\r\n    if (!repl.animations.animations.length) return false;\r\n    repl.animations.stop(args);\r\n  }\r\n}\r\n\r\nexport class ToggleFocusCommand implements Command {\r\n  about() { return \"Toggle focus\";}\r\n  execute(repl: Repl, args: string): void | false {\r\n    let activePanel = document.activeElement;\r\n    if (!activePanel?.classList.contains(\"panel\")) return false;\r\n    activePanel.classList.toggle(\"focus\");\r\n    // here i am - if not \"shift\" key then unfocus all panels\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { KeyboardHandler } from \"../models/KeyboardHandler\";\r\n\r\nexport class KeyboardHandlers {\r\n  private keyboardHandlers: Array<{match: KeyboardHandler; command: Command}> = [];\r\n\r\n  getEventHandlers(event: KeyboardEvent) {\r\n    return this.keyboardHandlers.filter(handler => {\r\n      let match = handler.match;\r\n      if (event.altKey !== match.altKey) return false;\r\n      if (event.shiftKey !== match.shiftKey) return false;\r\n      if (event.ctrlKey !== match.ctrlKey) return false;\r\n      if (!!match.key && event.key !== match.key) return false;\r\n      return true;\r\n    });\r\n  }\r\n\r\n  addEventHandler(command: Command, match: Partial<KeyboardHandler>) {\r\n    let fullMatch: KeyboardHandler = {\r\n      altKey: match.altKey ?? false,\r\n      ctrlKey: match.ctrlKey ?? false,\r\n      shiftKey: match.shiftKey ?? false,\r\n      key: match.key ?? \"\",\r\n      about: match.about || command.about && command.about()\r\n    };\r\n    this.keyboardHandlers.push({match: fullMatch, command});\r\n  }\r\n\r\n  list() {\r\n    return this.keyboardHandlers.map(h => ({\r\n      command:h.command,\r\n      key: this.keysAsString(h.match),\r\n      about: h.match.about,\r\n    }));\r\n  }\r\n\r\n  keysAsString(match: KeyboardHandler) {\r\n   let result = match.key;\r\n   switch (result){\r\n     case \" \": result = \"space\"; break;\r\n   }\r\n   if (match.ctrlKey) result = \"ctrl + \"+result;\r\n   if (match.altKey) result = \"alt + \"+result;\r\n   if (match.shiftKey) result = \"shift + \"+result;\r\n   return result;\r\n  }\r\n}\r\n", "import { Repl } from \"../controls/Repl\";\r\nimport { Command } from \"../models/Command\";\r\nexport class EscapeCommand implements Command {\r\n  \r\n  private isPanel(element: Element | null) {\r\n    if (!element)\r\n      return false;\r\n    return element.classList.contains(\"panel\") || element.classList.contains(\"panel-container\");\r\n  }\r\n\r\n  private selectParentPanel() {\r\n    let currentPanel = document.activeElement as HTMLElement | null;\r\n    if (!currentPanel)\r\n      return;\r\n    while (currentPanel) {\r\n      currentPanel = currentPanel.parentElement;\r\n      if (!currentPanel)\r\n        return;\r\n      if (this.isPanel(currentPanel)) {\r\n        currentPanel.focus();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  execute(repl: Repl, args: string): void {\r\n    // unfocus all panels\r\n    repl.panels.forEach(p => p.panel.classList.remove(\"focus\"));\r\n    this.selectParentPanel();\r\n  }\r\n}\r\n", "import { Repl } from \"../controls/Repl\";\r\nimport { Command } from \"../models/Command\";\r\n\r\nexport class ChangeFontSizeCommand implements Command {\r\n  readonly #units: string;\r\n\r\n  constructor(\r\n    public delta: number,\r\n    public options = {\r\n      units: \"px\",\r\n    }\r\n  ) {\r\n    this.#units = options?.units || \"px\";\r\n  }\r\n\r\n  about() {\r\n    return this.delta > 0 ? `increase font by ${this.delta}${this.#units}` : `decrease font by ${-this.delta}${this.#units}`;\r\n  }\r\n\r\n  isLabel(element: Element | null) {\r\n    if (!element) return false;\r\n    return element.classList.contains(\"label\");\r\n  }\r\n\r\n  execute(repl: Repl, args?: string | undefined): void | false {\r\n    const label = document.activeElement as HTMLElement;\r\n    if (!this.isLabel(label)) return false;\r\n    const fontSize = parseFloat(getComputedStyle(label).fontSize);\r\n    label.style.fontSize = `${fontSize + this.delta}${this.#units}`;\r\n  }\r\n}\r\n", "import { GooglePhotoAPI } from \"../models/GooglePhotoAPI\";\r\n\r\ndeclare var gapi: GooglePhotoAPI;\r\n\r\nexport class GooglePhotoSignin {\r\n  private peopleApiDiscovery = \"\";\r\n  // where to store these values?\r\n  private scopes = \"https://www.googleapis.com/auth/photoslibrary.readonly\";\r\n\r\n  private authorizeButton: HTMLButtonElement|null = null;\r\n  private signoutButton: HTMLButtonElement|null = null;\r\n\r\n  private ready = () => { };\r\n\r\n  async handleClientLoad() {\r\n    // Load the API client and auth2 library.\r\n    await new Promise((resolve, reject) => {\r\n      gapi.load(\"client:auth2\", resolve);\r\n    });\r\n    let credentialsResponse = await fetch(\"./web/credentials.json\");\r\n    let credentials: {\r\n      apiKey: string;\r\n      clientId: string;\r\n    } = await credentialsResponse.json();\r\n    let resp = await fetch(\"./web/photos_rest_v1.json\");\r\n    this.peopleApiDiscovery = await resp.json();\r\n    await this.initClient(credentials);\r\n  }\r\n\r\n  private async initClient(args: {\r\n    apiKey: string;\r\n    clientId: string;\r\n  }) {\r\n\r\n    this.authorizeButton = document.getElementById(\"authorize-button\") as HTMLButtonElement;\r\n    if (!this.authorizeButton) throw \"a clickable element must exist with id of 'authorize-button'\";\r\n\r\n    this.signoutButton = document.getElementById(\"signout-button\") as HTMLButtonElement;\r\n    if (!this.signoutButton) throw \"a clickable element must exist with id of 'signout-button'\";\r\n\r\n    return new Promise<any>(async (good, bad) => {\r\n      this.ready = () => good();\r\n      await gapi.client.init({\r\n        apiKey: args.apiKey,\r\n        discoveryDocs: [this.peopleApiDiscovery],\r\n        clientId: args.clientId,\r\n        scope: this.scopes,\r\n      });\r\n      // Listen for sign-in state changes.\r\n      gapi.auth2.getAuthInstance().isSignedIn.listen(status => this.updateSigninStatus(status));\r\n      // Handle the initial sign-in state.\r\n      this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\r\n      this.authorizeButton!.onclick = () => this.handleAuthClick();\r\n      this.signoutButton!.onclick = () => this.handleSignoutClick();\r\n    });\r\n  }\r\n\r\n  private updateSigninStatus(isSignedIn: boolean) {\r\n    if (isSignedIn) {\r\n      this.authorizeButton!.style.display = \"none\";\r\n      this.signoutButton!.style.display = \"block\";\r\n      this.ready();\r\n    }\r\n    else {\r\n      this.authorizeButton!.style.display = \"block\";\r\n      this.signoutButton!.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  private handleAuthClick() {\r\n    gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n\r\n  private handleSignoutClick() {\r\n    gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n}\r\n", "import { GooglePhotoSignin } from \"./GooglePhotoSignin\";\r\nimport { GoogleMediaItem } from \"../models/GoogleMediaItem\";\r\nimport { GoogleAlbum } from \"../models/GoogleAlbum\";\r\nimport { GooglePhotoAPI } from \"../models/GooglePhotoAPI\";\r\n\r\ndeclare var gapi: GooglePhotoAPI;\r\n\r\nexport class GooglePhotos {\r\n\r\n  async getAlbums() {\r\n    let signin = new GooglePhotoSignin();\r\n    await signin.handleClientLoad();\r\n    let resp = await gapi.client.photoslibrary.albums.list();\r\n    if (resp.status !== 200)\r\n      throw `status: ${resp.status}`;\r\n    console.log({ resp });\r\n    let albums = resp.result.albums as Array<GoogleAlbum>;\r\n    while (resp.result.nextPageToken) {\r\n      resp = await gapi.client.photoslibrary.albums.list({pageToken: resp.result.nextPageToken});\r\n      if (resp.status !== 200)\r\n        throw `status: ${resp.status}`;\r\n      console.log({ resp });\r\n      albums = albums.concat(resp.result.albums);\r\n    }\r\n    return albums;\r\n  }\r\n\r\n  async getAlbum(album: GoogleAlbum) {\r\n    let data = await gapi.client.photoslibrary.mediaItems.search({ albumId: album.id });\r\n    let {mediaItems} = data.result;\r\n    while (data.result.nextPageToken) {\r\n      data = await gapi.client.photoslibrary.mediaItems.search({ albumId: album.id, pageToken: data.result.nextPageToken });\r\n      mediaItems.push(...data.result.mediaItems);\r\n    }\r\n    return mediaItems;\r\n  }\r\n\r\n  async getPhoto(mediaItemId: string) {\r\n    let data = await gapi.client.photoslibrary.mediaItems.get({ mediaItemId });\r\n    return (data.result) as GoogleMediaItem;\r\n  }\r\n}\r\n", "/**\r\n * Keeps the google media info and has helper functions\r\n * to upgrade the lo-res to hi-res version\r\n */\r\nexport class CollagePhoto<TMediaInfo> {\r\n}\r\n", "import { CollagePhoto } from \"./CollagePhoto\";\r\nimport { GoogleMediaItem } from \"../models/GoogleMediaItem\";\r\n\r\nexport class GoogleCollagePhoto extends CollagePhoto<GoogleMediaItem> {\r\n  public img: HTMLDivElement;\r\n\r\n  constructor(public mediaInfo: GoogleMediaItem) {\r\n    super();\r\n    let img = this.img = document.createElement(\"div\");\r\n    img.classList.add(\"img\");\r\n    img.style.backgroundImage = `url(${this.mediaInfo.baseUrl})`;\r\n    img.title = mediaInfo.filename;\r\n  }\r\n  \r\n  renderInto(target: HTMLElement) {\r\n    target.appendChild(this.img);\r\n  }\r\n\r\n  clone() {\r\n    return new GoogleCollagePhoto(JSON.parse(JSON.stringify(this.mediaInfo)));\r\n  }\r\n}\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { GooglePhotos } from \"../controls/GooglePhotos\";\r\nimport { GoogleCollagePhoto } from \"../controls/GoogleCollagePhoto\";\r\n\r\nexport class OpenAlbumsCommand implements Command {\r\n    async execute(repl: Repl, args?: string | undefined): Promise<false | void> {\r\n        if (!args) {\r\n            await this.openAlbums(repl);\r\n            return;\r\n        }\r\n        let albumNames = args.split(\",\");\r\n        await this.openAlbums(repl, albumNames);\r\n    }\r\n\r\n    async openAlbums(repl: Repl, albumNames?: Array<string>) {\r\n        let photos = new GooglePhotos();\r\n        const target = document.querySelector(\".photos\") as HTMLElement;\r\n        if (target) {\r\n            let albums = await photos.getAlbums();\r\n            if (albumNames) albums = albums.filter(a => -1 < albumNames.indexOf(a.title));\r\n            albums.forEach(async (album) => {\r\n                console.log(`opening album: ${album.id} (${album.title})`);\r\n                let mediaItems = await photos.getAlbum(album);\r\n                mediaItems.forEach(mediaItem => {\r\n                    let photo = new GoogleCollagePhoto(mediaItem);\r\n                    repl.photos.push(photo);\r\n                    photo.renderInto(target);\r\n                    repl.reindexPhotos();\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n", "import { Repl } from \"../controls/Repl\";\r\nimport { Behavior } from \"../models/Behavior\";\r\n\r\n/**\r\n * When user shift-clicks a panel add \"focus\" class\r\n * When user clicks a panel add \"focus\" class, remove \"focus\" from all others\r\n */\r\nexport class MultiSelector implements Behavior<Repl>\r\n{\r\n    extend(control: Repl): void {\r\n        window.addEventListener(\"click\", event => {\r\n            // clear current \"focus\" if shift not clicked\r\n            if (!event.shiftKey) {\r\n                control.panels.forEach(p => p.panel.classList.remove(\"focus\"));\r\n            }\r\n            let panels = event.composedPath();\r\n            panels = panels.filter((node: any) => true === node?.classList?.contains(\"panel\")) as Array<HTMLElement>;            \r\n            panels.forEach((node: any) => node.classList.toggle(\"focus\"));\r\n        });\r\n    }\r\n\r\n}", "import { Repl } from \"../controls/Repl\";\r\nimport { Behavior } from \"../models/Behavior\";\r\nimport { Toaster } from \"../controls/Toaster\";\r\n\r\n/**\r\n * When user shift-clicks a panel add \"focus\" class\r\n * When user clicks a panel add \"focus\" class, remove \"focus\" from all others\r\n */\r\nexport class NotificationBehavior implements Behavior<Repl>\r\n{\r\n    constructor(public toaster: Toaster) {\r\n    }\r\n\r\n    extend(control: Repl): void {\r\n        let notify = control.notify;\r\n        control.notify = (message: string) => {\r\n            notify(message);\r\n            this.toaster.toast(message);\r\n        }\r\n    }\r\n}", "import { Repl } from \"../controls/Repl\";\r\nimport { Command } from \"../models/Command\";\r\nimport { getFocusPanels } from \"./getFocusPanels\";\r\nimport { CollagePanel } from \"../controls/CollagePanel\";\r\nimport { transform } from \"../fun/transform\";\r\n\r\n/**\r\n * Scale the image\r\n * @param scale percentage delta from current scale\r\n */\r\nfunction scaleImage(repl: Repl, panel: CollagePanel, scale: string) {\r\n    let node = panel.image;\r\n    if (!node)\r\n        return;\r\n\r\n    if (!scale) {\r\n        let width = getComputedStyle(node).width;\r\n        let scale = parseFloat(width) / 100;\r\n        repl.animations.animate(\"zoom\", () => {\r\n            scale *= 1.01;\r\n            node.style.width = `${100 * scale}%`;\r\n        });\r\n    }\r\n    else {\r\n        // compute focal point to zoom about\r\n        // let imageBox = bbox(node);\r\n        // let panelBox = bbox(panel.panel);\r\n        // let focalPoint = [-imageBox.left + panelBox.width / 2, -imageBox.top + panelBox.height / 2];\r\n        let effectiveScale = parseFloat(scale);\r\n        //node.style.width = `${100 * effectiveScale}%`;\r\n        // the image width and height changed, translate the original image\r\n        // center back to the panel center\r\n        transform(node, `scale(${effectiveScale},${effectiveScale})`);\r\n\r\n    }\r\n}\r\n\r\nexport class ScalePanelCommand implements Command {\r\n    constructor(public scale?: number) {\r\n    }\r\n\r\n    about() {\r\n      return `scale panel by ${(this.scale||0).toFixed(3)}`;\r\n    }\r\n\r\n    execute(repl: Repl, args?: string | undefined): void | false {\r\n        if (!!args) {\r\n            let [noun, noun2] = args.split(\" \");\r\n            let panel = repl.selectPanel(noun);\r\n            if (!panel) return false;\r\n            panel.scaleFrame(noun2);\r\n        }\r\n\r\n        let panels = getFocusPanels(repl);\r\n        if (!panels.length) return false;\r\n\r\n        panels.forEach(panel => {\r\n            panel.scaleFrame(this.scale + \"\");\r\n        });\r\n    }\r\n}\r\n\r\nexport class ScaleImageCommand implements Command {\r\n    constructor(public scale?: number) {\r\n    }\r\n\r\n    about() {\r\n      return `scale image by ${(this.scale||0).toFixed(3)}`;\r\n    }\r\n\r\n    execute(repl: Repl, args?: string | undefined): void | false {\r\n        if (!!args) {\r\n            let [id, scale] = args.split(\" \");\r\n            let panel = repl.selectPanel(id);\r\n            if (!panel) return false;\r\n            scaleImage(repl, panel, scale);\r\n            return;\r\n        }\r\n\r\n        if (!this.scale) return false;\r\n        let panels = getFocusPanels(repl);\r\n        if (!panels.length) return false;\r\n\r\n        panels.forEach(panel => {\r\n            scaleImage(repl, panel, this.scale + \"\");\r\n        });\r\n    }\r\n}\r\n\r\n", "import { Command } from \"../models/Command\";\r\nimport { Repl } from \"../controls/Repl\";\r\nimport { Dictionary } from \"../models/Dictionary\";\r\n\r\nconst paths = {\r\n    \"sc\": \"M10,30 A20,20,0,0,1,50,30 A20,20,0,0,1,90,30 Q90,60,50,90 Q10,60,10,30 Z\"\r\n}\r\n\r\nconst svgHash = <Dictionary<SVGPathElement>>{};\r\n\r\nfunction getSvgPath(key: keyof (typeof paths)) {\r\n    let result = svgHash[key];\r\n    if (!result) {\r\n        result = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n        result.id = key;\r\n        result.setAttribute(\"d\", paths[key]);\r\n        svgHash[key] = result;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport class CropToStateCommand implements Command {\r\n    about() {\r\n        return `applies an SVG filter to an image`;\r\n    }\r\n\r\n    execute(repl: Repl, args: string): void {\r\n        let [usStateCode, ...ids] = args.split(\" \").filter((v) => !!v);\r\n        const targets = ids.length ? ids.map((id) => repl.selectPanel(id)) : repl.panels;\r\n        const path = getSvgPath(\"sc\");\r\n\r\n        targets.forEach((p) => {\r\n            p!.panel.style.clipPath = `url(#heart)`;\r\n        });\r\n    }\r\n}\r\n", "import { Toaster } from \"./controls/Toaster\";\r\nimport { Repl } from \"./controls/Repl\";\r\nimport { DragAndDrop } from \"./controls/DragAndDrop\";\r\nimport { Commands } from \"./controls/Commands\";\r\nimport { HelpCommand } from \"./commands/Help\";\r\nimport { SplitCommand } from \"./commands/SplitCommand\";\r\nimport { AspectRatioCommand } from \"./commands/AspectRatioCommand\";\r\nimport { BorderCommand } from \"./commands/BorderCommand\";\r\nimport { ChangeStyleCommand } from \"./commands/ChangeStyleCommand\";\r\nimport { GotoCommandEditorCommand } from \"./commands/GotoCommandEditorCommand\";\r\nimport { SwapPanelsCommand } from \"./commands/SwapPanelsCommand\";\r\nimport { GotoCommand } from \"./commands/GotoCommand\";\r\nimport { TextCommand } from \"./commands/TextCommand\";\r\nimport { PadCommand } from \"./commands/PadCommand\";\r\nimport { ToggleVisibilityCommand } from \"./commands/ToggleVisibilityCommand\";\r\nimport { TranslateImageCommand } from \"./commands/TranslateCommand\";\r\nimport { MarginCommand } from \"./commands/MarginCommand\";\r\nimport { MergeCommand } from \"./commands/MergeCommand\";\r\nimport { HiResCommand } from \"./commands/HiResCommand\";\r\nimport { MoveCommand } from \"./commands/MoveCommand\";\r\nimport { RotatePanelCommand, RotateImageCommand } from \"./commands/ChangeRotationCommand\";\r\nimport { TranslatePanelCommand } from \"./commands/ChangePositionCommand\";\r\nimport { StopCommand, ToggleFocusCommand } from \"./commands/StopCommand\";\r\nimport { KeyboardHandlers } from \"./controls/KeyboardHandlers\";\r\nimport { EscapeCommand } from \"./commands/EscapeCommand\";\r\nimport { ChangeFontSizeCommand } from \"./commands/ChangeFontSizeCommand\";\r\nimport { OpenAlbumsCommand } from \"./commands/OpenAlbumsCommand\";\r\nimport { MultiSelector } from \"./behavior/MultiSelector\";\r\nimport { NotificationBehavior } from \"./behavior/NotificationBehavior\";\r\nimport { ScalePanelCommand, ScaleImageCommand } from \"./commands/ChangeScaleCommand\";\r\nimport {CropToStateCommand} from \"./commands/CropToState\";\r\n\r\n/** global variables */\r\nconst toaster = new Toaster(document.querySelector(\".toaster\") as HTMLElement);\r\nconst commands = new Commands();\r\nconst repl = new Repl(commands);\r\nconst keyboardHandlers = new KeyboardHandlers();\r\nrepl.use(new MultiSelector());\r\nrepl.use(new NotificationBehavior(toaster));\r\n\r\nkeyboardHandlers.addEventHandler(new HelpCommand(), { key: \"?\", about:\"Help\" });\r\nkeyboardHandlers.addEventHandler(new EscapeCommand(), { key: \"Escape\" });\r\nkeyboardHandlers.addEventHandler(new ChangeFontSizeCommand(1), { key: \"+\" });\r\nkeyboardHandlers.addEventHandler(new ChangeFontSizeCommand(-1), { key: \"-\" });\r\n\r\nkeyboardHandlers.addEventHandler(new ScalePanelCommand(1.01), { shiftKey: true, key: \"+\" });\r\nkeyboardHandlers.addEventHandler(new ScalePanelCommand(1 / 1.01), { shiftKey: true, key: \"-\" });\r\nkeyboardHandlers.addEventHandler(new ScaleImageCommand(1.01), { key: \"+\" });\r\nkeyboardHandlers.addEventHandler(new ScaleImageCommand(1 / 1.01), { key: \"-\" });\r\n\r\nkeyboardHandlers.addEventHandler(new RotateImageCommand(1), { key: \".\" });\r\nkeyboardHandlers.addEventHandler(new RotateImageCommand(-1), { key: \",\" });\r\nkeyboardHandlers.addEventHandler(new RotatePanelCommand(1), { shiftKey: true, key: \">\" });\r\nkeyboardHandlers.addEventHandler(new RotatePanelCommand(-1), { shiftKey: true, key: \"<\" });\r\n\r\n/** vim commands\r\nTo move left, press h.\r\nTo move right, press l.\r\nTo move down, press j.\r\nTo move up, press k.\r\n */\r\nkeyboardHandlers.addEventHandler(new TranslatePanelCommand({ x: -1 }), { shiftKey: true, key: \"ArrowLeft\" });\r\nkeyboardHandlers.addEventHandler(new TranslatePanelCommand({ x: 1 }), { shiftKey: true, key: \"ArrowRight\" });\r\nkeyboardHandlers.addEventHandler(new TranslatePanelCommand({ y: 1 }), { shiftKey: true, key: \"ArrowDown\" });\r\nkeyboardHandlers.addEventHandler(new TranslatePanelCommand({ y: -1 }), { shiftKey: true, key: \"ArrowUp\" });\r\n\r\nkeyboardHandlers.addEventHandler(new TranslateImageCommand({ x: -1 }), { shiftKey: false, key: \"ArrowLeft\" });\r\nkeyboardHandlers.addEventHandler(new TranslateImageCommand({ x: 1 }), { shiftKey: false, key: \"ArrowRight\" });\r\nkeyboardHandlers.addEventHandler(new TranslateImageCommand({ y: 1 }), { shiftKey: false, key: \"ArrowDown\" });\r\nkeyboardHandlers.addEventHandler(new TranslateImageCommand({ y: -1 }), { shiftKey: false, key: \"ArrowUp\" });\r\n\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"top\", { delta: 1, units: \"px\" }), { key: \"t\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"top\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"T\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"left\", { delta: 1, units: \"px\" }), { key: \"l\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"left\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"L\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"bottom\", { delta: 1, units: \"px\" }), { key: \"b\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"bottom\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"B\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"right\", { delta: 1, units: \"px\" }), { key: \"r\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"right\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"R\" });\r\n\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"width\", { delta: 1, units: \"px\" }), { key: \"w\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"width\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"W\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"height\", { delta: 1, units: \"px\" }), { key: \"h\" });\r\nkeyboardHandlers.addEventHandler(new ChangeStyleCommand(\"height\", { delta: -1, units: \"px\" }), { shiftKey: true, key: \"H\" });\r\n\r\nkeyboardHandlers.addEventHandler(new SwapPanelsCommand(), { ctrlKey: true, key: \"s\" });\r\nkeyboardHandlers.addEventHandler(new StopCommand(), { shiftKey: true, key: \" \" });\r\nkeyboardHandlers.addEventHandler(new GotoCommandEditorCommand(), { key: \"c\", about:\"goto commands\" });\r\nkeyboardHandlers.addEventHandler(new ToggleFocusCommand(), { shiftKey: true, key: \" \" });\r\nkeyboardHandlers.addEventHandler(new ToggleFocusCommand(), { shiftKey: false, key: \" \" });\r\n\r\nconst dnd = new DragAndDrop(repl, keyboardHandlers);\r\nrepl.dnd = dnd;\r\n\r\ncommands.add(new HelpCommand(), \"?\");\r\ncommands.add(new OpenAlbumsCommand(), \"open\");\r\n\r\ncommands.add(new AspectRatioCommand(), \"aspect\");\r\ncommands.add(new BorderCommand(), \"border\");\r\ncommands.add(new CropToStateCommand(), \"clip\");\r\ncommands.add(new GotoCommand(), \"goto\");\r\ncommands.add(new HiResCommand(), \"hires\");\r\ncommands.add(new MarginCommand(), \"margin\");\r\ncommands.add(new MergeCommand(), \"merge\");\r\ncommands.add(new MoveCommand(), \"move\");\r\ncommands.add(new PadCommand(), \"pad\");\r\ncommands.add(new RotateImageCommand(), \"rotate\");\r\ncommands.add(new ScalePanelCommand(), \"scale\");\r\ncommands.add(new SwapPanelsCommand(), \"swap\");\r\ncommands.add(new SplitCommand(), \"split\");\r\ncommands.add(new StopCommand(), \"stop\");\r\ncommands.add(new TextCommand(), \"text\");\r\ncommands.add(new TranslateImageCommand(), \"translate\");\r\ncommands.add(new TranslateImageCommand(), \"pan\");\r\ncommands.add(new ScaleImageCommand(), \"zoom\");\r\ncommands.add(new ChangeStyleCommand(\"backgroundColor\"), \"bgc\");\r\n\r\ncommands.add(new ToggleVisibilityCommand({ selector: \".collage .panel-container .overlay\" }), \"overlay\");\r\n\r\ncommands.add(new ChangeStyleCommand(\"borderColor\"), \"bc\");\r\ncommands.add(new ChangeStyleCommand(\"borderTopColor\"), \"bct\");\r\ncommands.add(new ChangeStyleCommand(\"borderBottomColor\"), \"bcb\");\r\ncommands.add(new ChangeStyleCommand(\"borderLeftColor\"), \"bcl\");\r\ncommands.add(new ChangeStyleCommand(\"borderRightColor\"), \"bcr\");\r\n\r\ncommands.add(new ChangeStyleCommand(\"borderWidth\", {units:\"px\"}), \"bw\");\r\ncommands.add(new ChangeStyleCommand(\"borderBottomWidth\"), \"bwb\");\r\ncommands.add(new ChangeStyleCommand(\"borderTopWidth\"), \"bwt\");\r\ncommands.add(new ChangeStyleCommand(\"borderLeftWidth\"), \"bwl\");\r\ncommands.add(new ChangeStyleCommand(\"borderRightWidth\"), \"bwr\");\r\n\r\ncommands.add(new ChangeStyleCommand(\"opacity\"), \"opacity\");\r\ncommands.add(new ChangeStyleCommand(\"borderRadius\"), \"br\");\r\ncommands.add(new ChangeStyleCommand(\"borderTopLeftRadius\"), \"brtl\");\r\ncommands.add(new ChangeStyleCommand(\"borderTopRightRadius\"), \"brtr\");\r\ncommands.add(new ChangeStyleCommand(\"borderBottomLeftRadius\"), \"brbl\");\r\ncommands.add(new ChangeStyleCommand(\"borderBottomRightRadius\"), \"brbr\");\r\n\r\ncommands.add(new ChangeStyleCommand(\"width\", { units: \"em\" }), \"width\");\r\ncommands.add(new ChangeStyleCommand(\"height\", { units: \"px\" }), \"height\");\r\n\r\ncommands.add(new ChangeStyleCommand(\"zIndex\"), \"z\");\r\n\r\ntoaster.toast(\"Welcome!\");\r\nexport let globals = {\r\n    allowSpeechRecognition: false,\r\n    debug: true,\r\n    repl,\r\n    dnd,\r\n    keyboardHandlers,\r\n}\r\n", "import { Listener } from \"../controls/Listener\";\r\nimport { globals } from \"../globals\";\r\n\r\nexport async function start() {\r\n  let repl = globals.repl;\r\n  await repl.startup();\r\n  if (globals.allowSpeechRecognition) {\r\n    let listener = new Listener();\r\n    listener.listen();\r\n    listener.on(\"speech-detected\", value => { repl.executeCommand(repl.parseCommand(value.result)); });\r\n  }\r\n  repl.getPhotoOverlays().forEach(overlay => {\r\n    globals.dnd.draggable(overlay);\r\n    console.log(`${overlay.innerHTML} is draggable`);\r\n  });\r\n}\r\n", "import { start } from \"./collage/fun/start.js\";\r\nimport { globals } from \"./collage/globals.js\";\r\n\r\nasync function run() {\r\n  start();\r\n\r\n  const repl = globals.repl;\r\n\r\n  repl.eval(\"aspect 4 6\");\r\n  if (globals.debug) {\r\n    repl.eval(\"split 1\");\r\n    repl.eval(\"merge 4 3\");\r\n    repl.eval(\"split 2\");\r\n    repl.eval(\"merge 4 5\");\r\n    repl.eval(\"merge 2 3\");\r\n    ///repl.eval(\"split 1\");\r\n\r\n    repl.eval(\"bw 1em\");\r\n    repl.eval(\"bc white\");\r\n    repl.eval(\"bgc silver\");\r\n    // repl.eval(\"scale 1 0.75\");\r\n    // repl.eval(\"border 1 3 silver\");\r\n    // repl.eval(\"rotate 1 -2\");\r\n    // repl.eval(\"zoom 2 0.5\");\r\n    // repl.eval(\"split 1\");\r\n    // repl.eval(\"merge 1 2\");\r\n    // repl.eval(\"split 6\");\r\n    // repl.eval(\"merge 8 9\");\r\n    // repl.eval(\"merge 6 7\");\r\n    // repl.eval(\"goto 1\");\r\n    // repl.eval(\"text 1 Summer 2019\");\r\n\r\n    await repl.eval(\"open 2019\"); // present list of google photo albums?\r\n    //await repl.eval(\"open gp 1999\"); // open google photo album \"1999\"?\r\n\r\n    setTimeout(() => {\r\n      let panelCount = document.querySelectorAll(\".collage .panel\").length;\r\n      let photoCount = document.querySelectorAll(\".collage .photos .img\").length;\r\n      for (let i = 1; i <= panelCount; i++) {\r\n        repl.eval(`move ${1 + ((i - 1) % photoCount)} ${i}`);\r\n      }\r\n      // repl.eval(\"open 1\");\r\n      // repl.eval(\"hires 6\");\r\n      // repl.eval(\"export\");\r\n    }, 3000);\r\n  }\r\n}\r\n\r\nrun();\r\n"],
  "mappings": "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",
  "names": []
}
